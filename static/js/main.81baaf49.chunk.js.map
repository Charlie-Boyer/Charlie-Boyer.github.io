{"version":3,"sources":["App.js","index.js"],"names":["App","boardRef","useRef","useState","Array","fill","board","setBoard","baseBoard","setBaseBoard","speed","setSpeed","useReducer","state","action","type","global","y","parts","data","coordinates","map","e","x","pattern","newPattern","initialState","piece","setPiece","rendering","setRendering","getCoordinatesFromPattern","forEach","i","split","el","il","push","array","newPiece","Math","floor","random","class","join","find","useEffect","window","addEventListener","handleKeyUp","handleKeyDown","interval","setInterval","current","currBoard","console","log","includes","splice","unshift","code","repeat","length","removeEventListener","clearInterval","shadowPiece","cell","toUpperCase","className","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81baaf49.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\nimport { useEffect, useState, useReducer, useRef } from 'react';\r\n\r\n\r\nfunction App() {\r\n\r\n  const boardRef = useRef();\r\n  const [board, setBoard] = useState(new Array(21).fill('0000000000').fill('1111111111', 20))\r\n  const [baseBoard, setBaseBoard] = useState(new Array(21).fill('0000000000').fill('1111111111', 20))\r\n  const [speed, setSpeed] = useState(1000)\r\n  const [piece, setPiece] = useReducer(pieceReducer, initialState())\r\n  const [rendering, setRendering] = useState(false)\r\n\r\n\r\n  function getCoordinatesFromPattern(pattern, x, y) {\r\n    let coordinates = []\r\n    pattern.forEach((e, i) => {\r\n      e.split('').map((el, il) => {\r\n        if (el != 0) {\r\n          coordinates.push({ x: x + il, y: y + i })\r\n        }\r\n      })\r\n    })\r\n    return coordinates\r\n  }\r\n\r\n\r\n  function initialState() {\r\n\r\n    function pieceGenerator(array) {\r\n      return array[Math.floor(Math.random() * 7)]\r\n    }\r\n\r\n\r\n\r\n    const pattern = [\r\n      ['0000', '0oo0', '0oo0', '0000'],\r\n      ['0000', 'iiii', '0000', '0000'],\r\n      ['00l', 'lll', '000'],\r\n      ['j00', 'jjj', '000'],\r\n      ['0ss', 'ss0', '000'],\r\n      ['zz0', '0zz', '000'],\r\n      ['0t0', 'ttt', '000']\r\n    ]\r\n\r\n    let newPiece = {\r\n      pattern: pieceGenerator(pattern),\r\n      global: { x: 0, y: 0 },\r\n      parts: [{ x: 0, y: 0 }]\r\n    }\r\n\r\n    newPiece.class = [...newPiece.pattern.join('')].find(e => e != 0)\r\n    newPiece.global = { x: 3, y: 0 }\r\n    newPiece.parts = getCoordinatesFromPattern(\r\n      newPiece.pattern,\r\n      newPiece.global.x,\r\n      newPiece.global.y\r\n    )\r\n    return newPiece\r\n  }\r\n\r\n  function pieceReducer(state, action) {\r\n    switch (action.type) {\r\n      case 'down':\r\n        return {\r\n          ...state,\r\n          global: { ...state.global, y: state.global.y + 1 },\r\n          parts: [...action.data.coordinates.map(e => ({...e}))]\r\n        };\r\n      case 'right':\r\n        return {\r\n          ...state,\r\n          global: { ...state.global, x: state.global.x + 1 },\r\n          parts: [...state.parts.map((e) => ({...e, x: e.x + 1 }))]\r\n        }\r\n      case 'left':\r\n        return {\r\n          ...state,\r\n          global: { ...state.global, x: state.global.x - 1 },\r\n          parts: [...state.parts.map((e) => ({...e, x: e.x - 1 }))]\r\n        };\r\n      case 'rotate':\r\n        return {\r\n          ...state,\r\n          pattern: [...action.data.newPattern],\r\n          parts: [...action.data.coordinates.map(e => ({...e}))]\r\n        };\r\n      case 'reset':\r\n        return initialState()\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  /* Controls  */\r\n  useEffect(() => {\r\n    window.addEventListener('keyup', handleKeyUp)\r\n    window.addEventListener('keydown', handleKeyDown)\r\n\r\n\r\n    let interval = setInterval(() => {\r\n      setRendering(true)\r\n      if (boardRef.current.piece.parts.find((e) => boardRef.current.baseBoard[e.y + 1][e.x] != 0)) {\r\n\r\n        let currBoard = [...boardRef.current.board]\r\n\r\n        console.log(boardRef.current.piece.parts, boardRef.current.baseBoard)\r\n\r\n        currBoard.forEach((e, i) => {\r\n          if (!e.includes('0') && i != 20) {\r\n            currBoard.splice(i, 1)\r\n            currBoard.unshift('0000000000')\r\n          }\r\n        })\r\n        setBaseBoard([...currBoard])\r\n        setPiece({ type: 'reset' })\r\n      }\r\n      else {\r\n        let coordinates = boardRef.current.piece.parts.map((e) => ({ ...e, y: e.y + 1 }))\r\n        setPiece({ type: 'down', data: { coordinates } })\r\n      }\r\n    }, speed)\r\n\r\n    function handleKeyUp(e) {\r\n      if (e.code == 'ArrowDown') {\r\n        setSpeed(1000)\r\n      }\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n      switch (e.code) {\r\n        case 'ArrowDown':\r\n            if (!e.repeat) {\r\n              setSpeed(50)\r\n            }\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n          if (!rendering) {\r\n\r\n            setRendering(true)\r\n            if (boardRef.current.piece.parts.find((e) => e.x < 0) || boardRef.current.piece.parts.find((e) => boardRef.current.baseBoard[e.y][e.x - 1] != 0)) {\r\n              return\r\n            } else {\r\n              setPiece({ type: 'left' })\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'ArrowRight':\r\n          if (!rendering) {\r\n            setRendering(true)\r\n            if (boardRef.current.piece.parts.find((e) => e.x > 9) || boardRef.current.piece.parts.find((e) => boardRef.current.baseBoard[e.y][e.x + 1] != 0)) {\r\n              return\r\n            } else {\r\n              setPiece({ type: 'right' })\r\n            }\r\n\r\n          }\r\n          break;\r\n\r\n\r\n\r\n        case 'KeyW':\r\n          if (!rendering) {\r\n\r\n            setRendering(true)\r\n            if (e.repeat) return\r\n            {\r\n              let newPattern = boardRef.current.piece.pattern.map((e, i) => boardRef.current.piece.pattern.map((el) => el[(el.length - 1) - i]).join(''));\r\n              let coordinates = getCoordinatesFromPattern(newPattern, boardRef.current.piece.global.x, boardRef.current.piece.global.y)\r\n              if (coordinates.find((e) => e.x > 9) || coordinates.find((e) => e.x < 0)) return\r\n              setPiece({ type: 'rotate', data: { newPattern, coordinates: coordinates } })\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'ArrowUp':\r\n          if (e.repeat) return\r\n          {\r\n            let newPattern = boardRef.current.piece.pattern.map((e, i) => boardRef.current.piece.pattern.map((el, y) => boardRef.current.piece.pattern[(boardRef.current.piece.pattern.length - 1) - y][i]).join(''));\r\n            let coordinates = getCoordinatesFromPattern(newPattern, boardRef.current.piece.global.x, boardRef.current.piece.global.y)\r\n            if (coordinates.find((e) => e.x > 9) || coordinates.find((e) => e.x < 0)) return\r\n            setPiece({ type: 'rotate', data: { newPattern, coordinates: coordinates } })\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n\r\n    return () => {\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      clearInterval(interval);\r\n    }\r\n  }, [speed])\r\n\r\n  // render  \r\n  useEffect(() => {\r\n    let currBoard = [...baseBoard]\r\n    let shadowPiece = [...piece.parts.map(e => ({ ...e }))]\r\n\r\n    while (!shadowPiece.find((e) => currBoard[e.y + 1][e.x] != 0)) {\r\n      shadowPiece = [...shadowPiece.map((e) => ({ ...e, y: e.y + 1 }))]\r\n    }\r\n\r\n    shadowPiece.forEach((e, i) => {\r\n      let cell = currBoard[e.y].split('')\r\n      cell[e.x] = piece.class.toUpperCase()\r\n      currBoard[e.y] = cell.join('')\r\n    })\r\n    piece.parts.forEach((e, i) => {\r\n      let cell = currBoard[e.y].split('')\r\n      cell[e.x] = piece.class\r\n      currBoard[e.y] = cell.join('')\r\n    })\r\n\r\n    setBoard([...currBoard])\r\n    setRendering(false)\r\n    //referencing state\r\n    boardRef.current = {\r\n      piece: { ...piece },\r\n      board: [...currBoard],\r\n      baseBoard: [...baseBoard]\r\n    }\r\n  }, [piece])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"infos\">lignes:</p>\r\n      <div className=\"board\">\r\n        {board.map((cell, i) => i != 20 && (\r\n          <div key={uuidv4()} className=\"row\">\r\n            {cell.split('').map((e) => <div key={uuidv4()} className={`cell ${e}-block`}></div>)}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}