{"version":3,"sources":["components/Piece/index.js","tetrisUtils.js","App.js","index.js"],"names":["Piece","piece","className","map","cell","i","split","e","uuidv4","piecePattern","generatePiece","index","newPiece","pattern","class","join","find","global","x","y","console","log","parts","getCoordinatesFromPattern","coordinates","forEach","el","il","push","App","stateRef","useRef","useState","Array","fill","board","setBoard","lineCount","setLineCount","next","setNext","hold","setHold","useEffect","prevFrame","window","addEventListener","handleKeyUp","handleKeyDown","pieceQueue","gravity","isDropped","boost","pieceBag","sort","Math","random","canChange","altPiece","randomPiece","length","shift","code","repeat","current","baseBoard","newPattern","frame","timestamp","delta","splice","unshift","render","includes","prev","requestAnimationFrame","currBoard","ghostPiece","toUpperCase","removeEventListener","cancelAnimationFrame","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af03b3d.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport './style.css';\r\n\r\n\r\n\r\nfunction Piece({piece}) {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"piece-container\">\r\n            {piece?.map((cell, i) => (\r\n          <div key={uuidv4()} className={`row ${cell}`}>\r\n            {\r\n              cell.split('').map((e) => e === '0' ? <div key={uuidv4()} className={`altCell`}></div> : <div key={uuidv4()} className={`${e}-block`}></div>)\r\n            }\r\n          </div>\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Piece;","const piecePattern = [\r\n  ['0oo0', '0oo0'],\r\n  ['0000', 'iiii', '0000', '0000'],\r\n  ['00l', 'lll', '000'],\r\n  ['j00', 'jjj', '000'],\r\n  ['0ss', 'ss0', '000'],\r\n  ['zz0', '0zz', '000'],\r\n  ['0t0', 'ttt', '000']\r\n]\r\n\r\n\r\n\r\nfunction generatePiece(index) {\r\n\r\n  let newPiece = {}\r\n\r\n  newPiece.pattern = piecePattern[index]\r\n  newPiece.class = [...newPiece.pattern.join('')].find(e => e !== '0')\r\n  newPiece.global = { x: 3, y: 0 }\r\n  let x = 0\r\n  console.log(newPiece.global)\r\n  \r\n  newPiece.parts = getCoordinatesFromPattern(piecePattern[index],3 ,0)\r\n  return newPiece\r\n}\r\n\r\nfunction getCoordinatesFromPattern(pattern, x, y) {\r\n  let coordinates = []\r\n\r\n  pattern.forEach((e, i) => {\r\n    e.split('').forEach((el, il) => {\r\n      if (el !== '0') {\r\n        coordinates.push({ x: x + il, y: y + i })\r\n      }\r\n    })\r\n  })\r\n  return coordinates\r\n}\r\n\r\n\r\nexport { generatePiece, getCoordinatesFromPattern, piecePattern }\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\nimport Piece from './components/Piece'\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { generatePiece, getCoordinatesFromPattern, piecePattern } from './tetrisUtils';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  const stateRef = useRef();\r\n  const [board, setBoard] = useState(new Array(22).fill('0000000000').fill('1111111111', 21))\r\n  const [lineCount, setLineCount] = useState(0)\r\n  const [isRunning, setIsRunning] = useState(false)\r\n  const [next, setNext] = useState(null)\r\n  const [hold, setHold] = useState(null)\r\n\r\n\r\n\r\n  /* Controls  */\r\n  useEffect(() => {\r\n\r\n    window.addEventListener('keyup', handleKeyUp)\r\n    window.addEventListener('keydown', handleKeyDown)\r\n\r\n    let prevFrame\r\n    let gravity = 0\r\n    let isDropped = false\r\n    let boost = 1\r\n    let pieceBag = [0, 1, 2, 3, 4, 5, 6].sort(() => Math.random() - 0.5)\r\n    let pieceQueue\r\n    let canChange = true\r\n    let altPiece = null\r\n    let level = 1\r\n\r\n    randomPiece()\r\n\r\n    stateRef.current = {\r\n      piece: { ...generatePiece(pieceQueue[0]) },\r\n      board: new Array(22).fill('0000000000').fill('1111111111', 21),\r\n      baseBoard: new Array(22).fill('0000000000').fill('1111111111', 21),\r\n    }\r\n\r\n    requestAnimationFrame(frame)\r\n\r\n\r\n    function randomPiece() {\r\n      let newPiece\r\n      if (pieceBag.length === 1) {\r\n        newPiece = pieceBag[0]\r\n        pieceBag = [0, 1, 2, 3, 4, 5, 6].sort(() => Math.random() - 0.5)\r\n      }\r\n      else {\r\n        newPiece = pieceBag.shift()\r\n      }\r\n      setNext(pieceBag[0])\r\n      pieceQueue = [newPiece, pieceBag[0]]\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n\r\n      switch (e.code) {\r\n        case 'ArrowDown':\r\n          if (!e.repeat) {\r\n            boost = 20\r\n          }\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n          if (stateRef.current.piece.parts.find((e) => e.x <= 0) || stateRef.current.piece.parts.find((e) => stateRef.current.baseBoard[e.y][e.x - 1] !== '0')) return\r\n          stateRef.current.piece.parts.forEach(e => e.x = e.x - 1)\r\n          stateRef.current.piece.global.x--\r\n          break;\r\n        case 'ArrowRight':\r\n          if (stateRef.current.piece.parts.find((e) => e.x >= 9) || stateRef.current.piece.parts.find((e) => stateRef.current.baseBoard[e.y][e.x + 1] !== '0')) return\r\n          stateRef.current.piece.parts.forEach(e => e.x = e.x + 1)\r\n          stateRef.current.piece.global.x++\r\n          break;\r\n        case 'KeyW':\r\n          {\r\n            let newPattern = stateRef.current.piece.pattern.map((e, i) => stateRef.current.piece.pattern.map((el) => el[(el.length - 1) - i]).join(''));\r\n            let coordinates = getCoordinatesFromPattern(newPattern, stateRef.current.piece.global.x, stateRef.current.piece.global.y)\r\n            if (coordinates.find((e) => stateRef.current.baseBoard[e.y][e.x] !== '0')) return\r\n            stateRef.current.piece.parts = coordinates\r\n            stateRef.current.piece.pattern = newPattern\r\n          }\r\n          break;\r\n\r\n        case 'KeyQ':\r\n          if (canChange) {\r\n            canChange = false\r\n            if (altPiece != null) {\r\n              stateRef.current.piece = { ...generatePiece(altPiece) }\r\n              altPiece = pieceQueue[0]\r\n              setHold(pieceQueue[0])\r\n            }\r\n            else {\r\n              stateRef.current.piece = { ...generatePiece(pieceQueue[1]) }\r\n              altPiece = pieceQueue[0]\r\n              setHold(pieceQueue[0])\r\n              randomPiece()\r\n            }\r\n          }\r\n          break;\r\n\r\n        case 'ArrowUp':\r\n          {\r\n            let newPattern = stateRef.current.piece.pattern.map((e, i) => stateRef.current.piece.pattern.map((el, y) => stateRef.current.piece.pattern[(stateRef.current.piece.pattern.length - 1) - y][i]).join(''));\r\n            let coordinates = getCoordinatesFromPattern(newPattern, stateRef.current.piece.global.x, stateRef.current.piece.global.y)\r\n            if (coordinates.find((e) => stateRef.current.baseBoard[e.y][e.x] !== '0')) return\r\n            stateRef.current.piece.parts = coordinates\r\n            stateRef.current.piece.pattern = newPattern\r\n\r\n          }\r\n          break;\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    function handleKeyUp(e) {\r\n      if (e.code === 'ArrowDown') {\r\n        boost = 1\r\n      }\r\n    }\r\n\r\n    function frame(timestamp) {\r\n\r\n      let delta = (timestamp - prevFrame) / 1e3 || 0\r\n\r\n      gravity += delta * boost \r\n      prevFrame = timestamp\r\n\r\n      if (gravity > 1) {\r\n        stateRef.current.baseBoard.forEach((e, i) => {\r\n          if (e === 'xxxxxxxxxx') {\r\n            stateRef.current.baseBoard.splice(i, 1)\r\n            stateRef.current.baseBoard.unshift('0000000000')\r\n          }\r\n        })\r\n\r\n        if (isDropped) {\r\n          randomPiece()\r\n          stateRef.current.piece = { ...generatePiece(pieceQueue[0]) }\r\n          render()\r\n          isDropped = false\r\n        }\r\n\r\n        if (stateRef.current.piece.parts.find((e) => e.y >= 20) || stateRef.current.piece.parts.find((e) => stateRef.current.baseBoard[e.y + 1][e.x] !== '0')) {\r\n          canChange = true\r\n          stateRef.current.board.forEach((e, i) => {\r\n            if (!e.includes('0') && i !== 21) {\r\n              stateRef.current.board[i] = 'xxxxxxxxxx'\r\n              setLineCount(prev => prev + 1)\r\n              level++\r\n            }\r\n          })\r\n          isDropped = true\r\n          stateRef.current.baseBoard = [...stateRef.current.board]\r\n          setBoard([...stateRef.current.baseBoard])\r\n        }\r\n        else {\r\n          stateRef.current.piece.parts.forEach(e => e.y = e.y + 1)\r\n          stateRef.current.piece.global.y++\r\n        }\r\n        gravity = 0\r\n      }\r\n      render()\r\n      requestAnimationFrame(frame)\r\n    }\r\n\r\n    function render() {\r\n\r\n      let currBoard = [...stateRef.current.baseBoard]\r\n      let ghostPiece = [...stateRef.current.piece.parts.map(e => ({ ...e }))]\r\n\r\n      while (!ghostPiece.find((e) => currBoard[e.y + 1][e.x] !== '0')) {\r\n        ghostPiece = [...ghostPiece.map((e) => ({ ...e, y: e.y + 1 }))]\r\n      }\r\n\r\n      ghostPiece.forEach((e, i) => {\r\n        let cell = currBoard[e.y].split('')\r\n        cell[e.x] = stateRef.current.piece.class.toUpperCase()\r\n        currBoard[e.y] = cell.join('')\r\n      })\r\n      stateRef.current.piece.parts.forEach((e, i) => {\r\n        let cell = currBoard[e.y].split('')\r\n        cell[e.x] = stateRef.current.piece.class\r\n        currBoard[e.y] = cell.join('')\r\n      })\r\n\r\n      stateRef.current.board = [...currBoard]\r\n      setBoard([...currBoard])\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      cancelAnimationFrame(frame)\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n\r\n      <div className=\"side\">\r\n        <p className=\"infos\">Hold</p>\r\n        <Piece piece={piecePattern[hold]} />\r\n        <p className=\"infos\">Lines: {lineCount}</p>\r\n      </div>\r\n      <div className=\"board\">\r\n        {\r\n          board.map((cell, i) => i !== 21 && i !== 0 && (\r\n            <div key={uuidv4()} className={`row ${cell}`}>\r\n              {\r\n                cell.split('').map((e) => e === '0' ? <div key={uuidv4()} className={`cell`}></div> : <div key={uuidv4()} className={`${e}-block`}></div>)\r\n              }\r\n\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <div className=\"side\">\r\n        <p className=\"infos\">Next</p>\r\n        <Piece piece={piecePattern[next]} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}